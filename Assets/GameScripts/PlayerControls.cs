//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/GameScripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""BaseGameplay"",
            ""id"": ""6185dd37-d4cf-4813-9bbe-5eb66ef1054f"",
            ""actions"": [
                {
                    ""name"": ""Drive"",
                    ""type"": ""Button"",
                    ""id"": ""4ee8ac01-bfca-4de5-8b33-c29b4b39fe84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Brake/Reverse"",
                    ""type"": ""Button"",
                    ""id"": ""d069f9b1-3d16-4f16-af11-6e6802b6db0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TurnLeft"",
                    ""type"": ""Button"",
                    ""id"": ""823d2906-6a15-4ef5-8553-05753f111a2c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TurnRight"",
                    ""type"": ""Button"",
                    ""id"": ""ace2d72d-6d3c-439f-80be-82d68b694016"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExtraButton"",
                    ""type"": ""Button"",
                    ""id"": ""a6acf7cd-0ac6-4bbf-a164-80a779251bfa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExtraButton2"",
                    ""type"": ""Button"",
                    ""id"": ""36c7a15d-c3e4-47d8-aee1-972fd6d92e57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TEST"",
                    ""type"": ""Value"",
                    ""id"": ""8849e9b7-4862-4046-b704-5a5abd5c6a12"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1628568f-aa20-44c6-8631-34fda7f05b7a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2511114-966e-4c2c-b151-a92ec9502a55"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20ae84f5-030f-4a85-9724-5dd7fd13c896"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake/Reverse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c35b654-f4bc-4547-b258-d90e877a336d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake/Reverse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c989b4d-2ad8-42fc-8a6d-5fabe68c3ff5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31f7f00f-8fbd-4f55-abbd-0e7b88a27cd6"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a082c649-0471-4753-9f74-dfb9d2593b14"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""816d0f43-4643-4f27-9413-bee8d910fe25"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51355478-3518-4317-aa8f-21cbc54e0062"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExtraButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ede5cd1-e28d-4f96-92a1-00c02d7cbda6"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExtraButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b353113-0abe-46a6-bb33-d736ed090339"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExtraButton2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f96b1a9e-cff1-478c-9f02-6b14c435efb6"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExtraButton2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6edf5e5-567c-459a-93d7-5e2377337f67"",
                    ""path"": ""<Gyroscope>/angularVelocity"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TEST"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // BaseGameplay
        m_BaseGameplay = asset.FindActionMap("BaseGameplay", throwIfNotFound: true);
        m_BaseGameplay_Drive = m_BaseGameplay.FindAction("Drive", throwIfNotFound: true);
        m_BaseGameplay_BrakeReverse = m_BaseGameplay.FindAction("Brake/Reverse", throwIfNotFound: true);
        m_BaseGameplay_TurnLeft = m_BaseGameplay.FindAction("TurnLeft", throwIfNotFound: true);
        m_BaseGameplay_TurnRight = m_BaseGameplay.FindAction("TurnRight", throwIfNotFound: true);
        m_BaseGameplay_ExtraButton = m_BaseGameplay.FindAction("ExtraButton", throwIfNotFound: true);
        m_BaseGameplay_ExtraButton2 = m_BaseGameplay.FindAction("ExtraButton2", throwIfNotFound: true);
        m_BaseGameplay_TEST = m_BaseGameplay.FindAction("TEST", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // BaseGameplay
    private readonly InputActionMap m_BaseGameplay;
    private IBaseGameplayActions m_BaseGameplayActionsCallbackInterface;
    private readonly InputAction m_BaseGameplay_Drive;
    private readonly InputAction m_BaseGameplay_BrakeReverse;
    private readonly InputAction m_BaseGameplay_TurnLeft;
    private readonly InputAction m_BaseGameplay_TurnRight;
    private readonly InputAction m_BaseGameplay_ExtraButton;
    private readonly InputAction m_BaseGameplay_ExtraButton2;
    private readonly InputAction m_BaseGameplay_TEST;
    public struct BaseGameplayActions
    {
        private @PlayerControls m_Wrapper;
        public BaseGameplayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Drive => m_Wrapper.m_BaseGameplay_Drive;
        public InputAction @BrakeReverse => m_Wrapper.m_BaseGameplay_BrakeReverse;
        public InputAction @TurnLeft => m_Wrapper.m_BaseGameplay_TurnLeft;
        public InputAction @TurnRight => m_Wrapper.m_BaseGameplay_TurnRight;
        public InputAction @ExtraButton => m_Wrapper.m_BaseGameplay_ExtraButton;
        public InputAction @ExtraButton2 => m_Wrapper.m_BaseGameplay_ExtraButton2;
        public InputAction @TEST => m_Wrapper.m_BaseGameplay_TEST;
        public InputActionMap Get() { return m_Wrapper.m_BaseGameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BaseGameplayActions set) { return set.Get(); }
        public void SetCallbacks(IBaseGameplayActions instance)
        {
            if (m_Wrapper.m_BaseGameplayActionsCallbackInterface != null)
            {
                @Drive.started -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnDrive;
                @Drive.performed -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnDrive;
                @Drive.canceled -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnDrive;
                @BrakeReverse.started -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnBrakeReverse;
                @BrakeReverse.performed -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnBrakeReverse;
                @BrakeReverse.canceled -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnBrakeReverse;
                @TurnLeft.started -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnTurnLeft;
                @TurnLeft.performed -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnTurnLeft;
                @TurnLeft.canceled -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnTurnLeft;
                @TurnRight.started -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnTurnRight;
                @TurnRight.performed -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnTurnRight;
                @TurnRight.canceled -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnTurnRight;
                @ExtraButton.started -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnExtraButton;
                @ExtraButton.performed -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnExtraButton;
                @ExtraButton.canceled -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnExtraButton;
                @ExtraButton2.started -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnExtraButton2;
                @ExtraButton2.performed -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnExtraButton2;
                @ExtraButton2.canceled -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnExtraButton2;
                @TEST.started -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnTEST;
                @TEST.performed -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnTEST;
                @TEST.canceled -= m_Wrapper.m_BaseGameplayActionsCallbackInterface.OnTEST;
            }
            m_Wrapper.m_BaseGameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Drive.started += instance.OnDrive;
                @Drive.performed += instance.OnDrive;
                @Drive.canceled += instance.OnDrive;
                @BrakeReverse.started += instance.OnBrakeReverse;
                @BrakeReverse.performed += instance.OnBrakeReverse;
                @BrakeReverse.canceled += instance.OnBrakeReverse;
                @TurnLeft.started += instance.OnTurnLeft;
                @TurnLeft.performed += instance.OnTurnLeft;
                @TurnLeft.canceled += instance.OnTurnLeft;
                @TurnRight.started += instance.OnTurnRight;
                @TurnRight.performed += instance.OnTurnRight;
                @TurnRight.canceled += instance.OnTurnRight;
                @ExtraButton.started += instance.OnExtraButton;
                @ExtraButton.performed += instance.OnExtraButton;
                @ExtraButton.canceled += instance.OnExtraButton;
                @ExtraButton2.started += instance.OnExtraButton2;
                @ExtraButton2.performed += instance.OnExtraButton2;
                @ExtraButton2.canceled += instance.OnExtraButton2;
                @TEST.started += instance.OnTEST;
                @TEST.performed += instance.OnTEST;
                @TEST.canceled += instance.OnTEST;
            }
        }
    }
    public BaseGameplayActions @BaseGameplay => new BaseGameplayActions(this);
    public interface IBaseGameplayActions
    {
        void OnDrive(InputAction.CallbackContext context);
        void OnBrakeReverse(InputAction.CallbackContext context);
        void OnTurnLeft(InputAction.CallbackContext context);
        void OnTurnRight(InputAction.CallbackContext context);
        void OnExtraButton(InputAction.CallbackContext context);
        void OnExtraButton2(InputAction.CallbackContext context);
        void OnTEST(InputAction.CallbackContext context);
    }
}
